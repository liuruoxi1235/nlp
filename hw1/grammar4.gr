# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are usually lowercase  (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

70	ROOT	S .
5	ROOT	S !
0.5	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#   Wh = interrogative words
#   AUV = auxiliary verbs
#   WHVerb = verb used in Wh questions

1	S	NP VP
1   S   NP Verb_sentence SS
1   S   it AV NP SS
1   S   SS AV NP
1   S   Wh AUV Whs
1   S   Wh AUV Whs that NP Verb
1   S   Wh AUV Whs NP Prep
1   S   Wh Verb NP
1   SS  that NP VP
1	VP	Verb NP
1   VP  IVP #3
1   IVP Intrans
1   IVP Intrans PP
1   Whs NP WHVerb
1   Whs NP Verb NP
1	NP	Det_Phrase
0.2 NP  Name
0.2	NP	NP PP
0.1 NP  NP Con NP
1	PP	Prep NP

1   Noun_P A_Noun_P
1   Noun_P An_Noun_P

1   A_Noun_P Noun
0.5   A_Noun_P Adj_a Noun_P

1   An_Noun_P Noun_an
0.5   An_Noun_P Adj_an_P Noun_P

0.5 Det_Phrase Det Noun_P
0.5 Det_Phrase A A_Noun_P
0.5 Det_Phrase An An_Noun_P


# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1   Verb    Verb  Con  Verb
1	Verb	ate
1	Verb	wanted
1	Verb	kissed
1	Verb	understood
1	Verb	pickled

1   WHVerb  think
1   WHVerb  eat
1   Wh what
1   Wh who
1   Wh where
1   AUV did

1   Verb_sentence    thought

1   Intrans sighed
1   Intrans worked

1   AV perplexed

1   Adv very

5	Det	the
1	Det	every

1   A   a 
1   An  an

1   Name    Sally

1   Con     and

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1   Noun    proposal
1   Noun    desk

1   Noun_an apple
1   Noun_an orange

1  Adv very

1  Adj Adj_a
1  Adj Adj_an

1  Adj_a Adv Adj

1  Adj_an_P Adj_an Adj_an_r
1  Adj_an_P Adj_an

1  Adj_an_r Adj_an
1  Adj_an_r Adv Adj_an

1	Adj_a	fine
1	Adj_a	delicious
1	Adj_a	perplexed
1	Adj_a	pickled

1   Adj_an ambivalent
1   Adj_an excellent

1	Prep	with
1	Prep	on
0.2	Prep	under
1	Prep	in
